<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.survey.component.mapper.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.survey.entities.manager.Admin" >
    <id column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="admin_name" property="adminName" jdbcType="CHAR" />
    <result column="admin_pwd" property="adminPwd" jdbcType="CHAR" />
    <result column="code_arr" property="codeArr" jdbcType="CHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from manager_admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atguigu.survey.entities.manager.Admin" >
    insert into manager_admin (admin_id, admin_name, admin_pwd, 
      code_arr)
    values (#{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=CHAR}, #{adminPwd,jdbcType=CHAR}, 
      #{codeArr,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.survey.entities.manager.Admin" >
    update manager_admin
    set admin_name = #{adminName,jdbcType=CHAR},
      admin_pwd = #{adminPwd,jdbcType=CHAR},
      code_arr = #{codeArr,jdbcType=CHAR}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select admin_id, admin_name, admin_pwd, code_arr
    from manager_admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select admin_id, admin_name, admin_pwd, code_arr
    from manager_admin
  </select>
  
  <select id="selectLoginAdmin" resultMap="BaseResultMap">
  		select admin_id, admin_name, admin_pwd, code_arr
    from manager_admin where admin_name LIKE  BINARY  #{adminName} and admin_pwd=#{adminPwd}
  </select>
  
  <select id="findAdminByName" resultMap="BaseResultMap">
  	select admin_id, admin_name, admin_pwd, code_arr
    from manager_admin where admin_name = #{adminName} 
  </select>
  
  
  <resultMap type="com.atguigu.survey.entities.manager.Role" id="getRoleListDeeplyByAdminIdResultMap">
  		 <id column="role_id" property="roleId" jdbcType="INTEGER" />
    	<result column="role_name" property="roleName" jdbcType="CHAR" />
    	<collection property="auths" ofType="com.atguigu.survey.entities.manager.Auth">
    		<id column="auth_id" property="authId" jdbcType="INTEGER" />
    		<result column="auth_name" property="authName" jdbcType="CHAR" />
    		<collection property="resList" ofType="com.atguigu.survey.entities.manager.Res">
    			<id column="res_id" property="resId" jdbcType="INTEGER" />
			    <result column="servlet_path" property="servletPath" jdbcType="CHAR" />
			    <result column="res_code" property="resCode" jdbcType="INTEGER" />
			    <result column="res_pos" property="resPos" jdbcType="INTEGER" />
			    <result column="public_status" property="publicStatus" jdbcType="BIT" />
    		</collection>
    	</collection>
  </resultMap>
  
  <select id="getRoleListDeeplyByAdminId" resultMap="getRoleListDeeplyByAdminIdResultMap">
  		SELECT 
  		manager_role.role_id, 
		manager_role.role_name,
		manager_auth.auth_id,
		manager_auth.auth_name,
		manager_res.res_id,
		manager_res.servlet_path,
		manager_res.res_code,
		manager_res.res_pos,
		manager_res.public_status
		FROM 
		 inner_admin_role  LEFT JOIN manager_role ON   inner_admin_role.role_id=manager_role.role_id
		 LEFT JOIN inner_role_auth ON manager_role.role_id=inner_role_auth.role_id 
		 LEFT JOIN manager_auth ON inner_role_auth.auth_id=manager_auth.auth_id
		 LEFT JOIN inner_auth_res ON manager_auth.auth_id=inner_auth_res.auth_id
		 LEFT JOIN manager_res ON inner_auth_res.res_id=manager_res.res_id
		WHERE inner_admin_role.admin_id=#{adminId}
  </select>
  
  <delete id="removeAllRolesByAdminId">
  		DELETE FROM survey_main.inner_admin_role 
		WHERE
		admin_id = #{adminId}
  </delete>
  
  <delete id="removeAllRolesByAdminIdList">
  		DELETE FROM survey_main.inner_admin_role 
		WHERE
		admin_id in
		<foreach collection="adminIdList"  item="adminId" open="(" close=")" separator=",">
		 #{adminId}
		 </foreach>
  </delete>
  <delete id="batchDelete">
  		 delete from manager_admin
    	 where admin_id in
    	 <foreach collection="adminIdList"  item="adminId" open="(" close=")" separator=",">
    	  #{adminId,jdbcType=INTEGER}
    	  </foreach> 
  </delete>
  
  <insert id="insertRoles">
  		INSERT INTO survey_main.inner_admin_role 
			(admin_id, role_id)
			VALUES
			<foreach collection="roleIdList" item="roleId" separator=",">
			(#{adminId}, #{roleId} )
			</foreach>
  </insert>
  
  <update id="updateAdminCodeArr">
  	 update manager_admin
    set 
      code_arr = #{codeArr,jdbcType=CHAR}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  
  
  
</mapper>